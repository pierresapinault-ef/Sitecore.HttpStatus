<Window x:Class="Sitecore.HttpStatus.Windows.Home"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:Sitecore.HttpStatus.Windows.ViewModel"
        DataContext="{DynamicResource HomeViewModel}"
        Title="Sitecore HttpStatus"
        ResizeMode="CanResize" Width="1000" Height="600" Top="100" Left="100" HorizontalAlignment="Left" VerticalAlignment="Top">
    <Window.Resources>
        <vm:HomeViewModel x:Key="HomeViewModel"/>
    </Window.Resources>
    <Grid>
        <ComboBox x:Name="comboBoxMarkets"  
                  ItemsSource="{Binding MarketsList}" 
                  Margin="249,9,0,0" 
                  Width="93"
                  Height="32"
                  VerticalAlignment="Top" 
                  HorizontalAlignment="Left" 
                  DisplayMemberPath="twoLetterCode"
                  Background="Pink"
                  SelectedValue="{Binding SelectedMarket}"/>
        <TextBlock Text="Market" IsHitTestVisible="False" Margin="273,18,658,520">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=comboBoxMarkets,Path=SelectedItem}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <ComboBox x:Name="comboBoxProgram"
                  HorizontalAlignment="Left" 
                  Margin="21,11,0,0" 
                  VerticalAlignment="Top" 
                  Width="165"
                  SelectedItem="{Binding Path=SelectedProgram}"                 
                  ItemsSource="{Binding SelectedItem.ProgramCollection, ElementName=comboBoxMarkets}" Height="29"/>
        <TextBlock Text="Language Program" IsHitTestVisible="False" Margin="44,14,843,524">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=comboBoxProgram,Path=SelectedItem}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Button x:Name="Btn" 
                Content="START"
                Foreground="White"
                FontSize="25px"
                Command="{Binding StartCommand}" 
                HorizontalAlignment="Left" 
                Margin="765,14,0,0" 
                VerticalAlignment="Top" 
                Width="195" 
                ToolTip="Click here to start!"
                IsEnabled="{Binding StartBtn}" 
                Height="76">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#00a4c3"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#ec008c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <CheckBox x:Name="GenerateScreenshot" 
                  IsChecked="{Binding GenerateScreenshot}" 
                  Content="Generate Webpage Screenshot"
                  HorizontalAlignment="Left" 
                  Margin="390,19,0,0" 
                  VerticalAlignment="Top"/>
        <CheckBox x:Name="IncludeDestinations" 
                  IsChecked="{Binding IncludeDestinations}" 
                  Content="Include Destinations (Only for Language Sites)" 
                  HorizontalAlignment="Left" 
                  Margin="256,57,0,0" 
                  VerticalAlignment="Top"/>
        <CheckBox x:Name="IncludeCourses" 
                  IsChecked="{Binding IncludeCourses}" 
                  Content="Include Courses (Only for Language Sites)" 
                  HorizontalAlignment="Left" 
                  Margin="256,82,0,0" 
                  VerticalAlignment="Top"/>
        <DataGrid x:Name="dataGrid" 
                  HorizontalAlignment="Left" 
                  Margin="256,114,0,0" 
                  VerticalAlignment="Top" 
                  ItemsSource="{Binding StatusList}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="false" Width="726">
            <DataGrid.Columns>
                <DataGridHyperlinkColumn Width="490" Header="Url" Binding="{Binding Path=Url}"/>
                <DataGridTextColumn Width="110" Header="Status" Binding="{Binding Path=StatusInt}"/>
                <DataGridTextColumn Width="110" Header="No Cache Status" Binding="{Binding Path=StaticIgnoreStatus}"/>
            </DataGrid.Columns>
        </DataGrid>
        <vm:ExtendedTreeView x:Name="treeView" 
                  HorizontalAlignment="Left" 
                  Margin="10,72,0,0" 
                  VerticalAlignment="Top" 
                  Width="222" Height="487"
                  ItemsSource="{Binding Folders}"
                  SelectedItem_="{Binding SelectedNode, Mode=TwoWay}">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Folders}" DataType="{x:Type vm:IFolder}">
                    <TreeViewItem Header="{Binding FolderLabel}"/>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </vm:ExtendedTreeView>
        <Label x:Name="label" 
               Content="OR" 
               HorizontalAlignment="Left" 
               Margin="56,38,0,0" 
               VerticalAlignment="Top">
        </Label>
    </Grid>
</Window>
